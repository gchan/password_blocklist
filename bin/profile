#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'password_blocklist'
require 'memory_profiler'
require 'set'

report_options = {
  scale_bytes: true,
  detailed_report: false,
  retained_strings: 0,
  allocated_strings: 0
}

# String
report = MemoryProfiler.report do
  tester = PasswordBlocklist::Checker.new

  100.times do
    tester.blocklisted?('AccurateUnicornCoalPaperclip')
  end
end

puts 'String (current implementation)'
report.pretty_print(report_options)

# Array
report = MemoryProfiler.report do
  file_path = File.expand_path('../data/Top95Thousand-probable.txt', __dir__)
  blocklist = File.read(file_path)
  array     = blocklist.split("\n")

  100.times do
    !array.bsearch { |password| 'AccurateUnicornCoalPaperclip' <=> password }.nil?
  end
end

puts 'Array'
report.pretty_print(report_options)

# Set
report = MemoryProfiler.report do
  file_path = File.expand_path('../data/Top95Thousand-probable.txt', __dir__)
  blocklist = File.read(file_path)
  array     = blocklist.split("\n")
  set       = array.to_set

  100.times do
    set.include?('AccurateUnicornCoalPaperclip')
  end
end

puts 'Set'
report.pretty_print(report_options)
